spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/full-stack-ecommerce
#spring.datasource.username=debian-sys-maint
#spring.datasource.password=2e5xGYndRUvgfzPX
spring.datasource.username=root
spring.datasource.password=MyNewPass1!
#spring.datasource.password=ejtudzi


# Port for HTTP and read by Spring Boot via @Value("${server.http.port:80}")
server.http.port=8080

# Port for HTTPS and read by Spring Boot via @Value("${server.port:443}")
server.port=8443

server.ssl.enabled=true

server.ssl.key-store=/etc/ssl/private/certificate.p12
#server.ssl.key-store=classpath:keystore/certificate.p12
server.ssl.key-store-password=ejtudzi
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=1



#lets-encrypt-helper.domain=zoran-dzoic.com
#lets-encrypt-helper.contact=mailto:gentlehouse@gmail.com


jwt.secret=[a-zA-Z0-9._]^+$Guidelines89797987forAlphabeticalArraNumeralsandOtherSymbo$

#ovo je u startu bilo create, sad update...magic
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

allowed.origins=http://localhost:4200

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#spring.data.rest.base-path=/api

#allowed.origins=http://localhost:4200

spring.data.rest.detection-strategy=ANNOTATED

#ova dva ispod eliminiraju white error page
#spring.mvc.throw-exception-if-no-handler-found=true
#spring.web.resources.add-mappings=false


server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto



logging.level.root = WARN
logging.level.com.luv2code.ecommerce = DEBUG
logging.level.org.springframework = INFO
logging.file = app.log

